#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Date    : 2014-08-15 17:04:53
# @Author  : Your Name (you@example.org)
# @Link    : http://example.org
# @Version : $Id$


import ConfigParser
import datetime
import json
import logging
import logging
import string
import sys
import math
import traceback
from urllib import quote
import urllib2
import uuid
from mongokit.helpers import totimestamp, fromtimestamp
import globalConfig
from iget_client import *
from mongo_field_encoder import MongoFieldEncoder
from proccessor.baseMessageProccessor import BaseMessageProccessor
from proccessor.token_service import TokenService
from utils.mongo_client import MongoClient
from utils.redis_client import RedisClient
import copy
import globalConfig
import urllib
try:
    from pymongo.objectid import ObjectId
except ImportError:
    from bson.objectid import ObjectId

reload(sys)
sys.setdefaultencoding('utf-8')

####精品好货消息发送处理类
class Weather_Message_Proccessor(BaseMessageProccessor):
    def __init__(self,message_event_dic):
        super(Weather_Message_Proccessor, self).__init__(message_event_dic)

        self.message_event_dic=message_event_dic
        self.message_group=[]


    def createMessages(self):
        logging.info("weather push createdMessages")
        '''
        {
            "type":"activity_boutique",
            "from_user":{
                "username":"",
                "nick":"",
                "avatar_url":""
            },
            "post_info":{
                "post_id":"",
                "image_url":""
            }

        }
        '''
        try:
          
            self.message=[]

            mes = self.message_event_dic
            mes["created"] = datetime.datetime.utcnow()
            tmp_result = {
                "from_user": {
                    "username": ""
                }
            }
            logging.info("self.message_event_dic:"+str(self.message_event_dic))
            title_type = mes["message_type"]

            tmp_result["type"] = mes["message_type"]


            navigation_url = "ziya://exec/?action=weatherpush&title_type=%s&q=%s"%(title_type,mes["q"])

            tmp_result["navigation_url"] = navigation_url





            user_set=set([])

            message_entities = self.createMessagesToTarget(tmp_result,title_type,mes,user_set)
            entities=message_entities["entities"]
            if len(entities)>0:
                self.message_group.append(message_entities)

            logging.info("weather push createdMessages success")
        except Exception as e:
            logging.error(traceback.format_exc())
            logging.info('Exception:%s' % e.message)


    def createMessagesToTarget(self,tmp_result,title_type,mes,user_set):
        lookup={
                "username":{"$in":mes["to_username"]}
        }
        user = MongoClient.find_all(lookup,"users")
        users_ary = user
        message_entities=self.createMessageEntities(tmp_result,title_type,users_ary,user_set,mes)
        return message_entities

    def sendMessages(self):
        self.sendMessagesList()




