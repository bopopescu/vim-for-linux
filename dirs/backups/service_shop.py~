 #!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Date    : 2014-10-10 10:19:40
# @Author  : Your Name (you@example.org)
# @Link    : http://example.org
# @Version : $Id$

from bson import ObjectId
from handler_baseHt import BaseHtHandler
from log import get_logger, get_logger
from model.informs import Inform
from model.permissions_ht import Permissions_ht
from mongo_field_encoder import MongoFieldEncoder
from mongokit.helpers import totimestamp, fromtimestamp
from mongolog import MongoHandler
from tornado.httpclient import HTTPRequest
from tornado.options import options
from tornado.web import asynchronous
import simplejson as json1

from utils.mongo_client import MongoClient
from utils.mongo_front import MongoFront
from utils.redis_client import RedisClient
from utils.secret import *
from utils.token_im import TokenService
import datetime
import hashlib
import hashlib
import json
import optionsSetting
import pymongo
import random
import time
import tornado.web
from tornado import gen
import traceback
from auth import requires_auth

try:
    from tornado.curl_httpclient import CurlAsyncHTTPClient as AsyncHTTPClient
except ImportError:
    from tornado.simple_httpclient import SimpleAsyncHTTPClient as AsyncHTTPClient
log = get_logger()

@gen.coroutine
def getGoodDetail(goods_url):
    request_url = 'http://shop.ziyadiaoyu.com/goods_info.php'
    data = {
        "url": goods_url
    }
    request = HTTPRequest(url=request_url, \
                          method="POST", \
                          body=json.dumps(data, \
                                          indent=2, \
                                          ensure_ascii=False), \
                          follow_redirects=False, \
                          request_timeout=3000)

    result = {}
    response = yield gen.Task(AsyncHTTPClient().fetch, request)
    if response.code == 200:
        # log.info("######response.body:"+response.body)
        result = json1.loads(response.body, encoding="utf-8")
    raise gen.Return(result)

@gen.coroutine
def refresh(self,server_url):

    log.info("server_url:"+server_url)
    headers = {}
    request = HTTPRequest(url=server_url,\
                          method="GET", \
                          headers=headers,\
                          follow_redirects=False,\
                          request_timeout=10000)

    yield gen.Task(AsyncHTTPClient().fetch,request)